on:
  push:
    branches:
      - master
      - issue/*
      - release/*
name: 'Porsche Browser Notification Banner'
jobs:
  package:
    name: 'Package'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Build'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
      - name: 'Store CDN Artifacts'
        uses: actions/upload-artifact@v2
        with:
          name: cdn-artifacts
          path: ./cdn
      - name: 'Store NPM Artifacts'
        uses: actions/upload-artifact@v2
        with:
          name: npm-artifacts
          path: ./dist
  cdn-deployment:
    name: 'CDN Deployment'
    needs:
      - package
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Restore CDN Artifacts'
        uses: actions/download-artifact@v2
        with:
          name: cdn-artifacts
          path: ./cdn
      - name: 'Deploy to CDN'
        uses: ./.github/actions/docker-run
        env:
          CDN_USER: ${{ secrets.CDN_USER }}
          CDN_SSH_KEY: ${{ secrets.CDN_SSH_KEY }}
        with:
          entrypoint: run-deploy-cdn
  npm-release:
    name: 'NPM Release'
    needs:
      - cdn-deployment
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Restore NPM Artifacts'
        uses: actions/download-artifact@v2
        with:
          name: npm-artifacts
          path: ./dist
      - name: 'Publish NPM Package'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }} #
          NPMJS_REGISTRY_TOKEN: ${{ secrets.NPMJS_REGISTRY_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          entrypoint: run-release-npm
          args: dist
